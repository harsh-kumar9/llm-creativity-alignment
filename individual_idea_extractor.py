# -*- coding: utf-8 -*-
"""Untitled30.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1YViOyCtT1Sij4EYIs4M2kdF_fPUEUBwG
"""

import pandas as pd

file_name = 'Llama-2-7b-chat-hf.csv'
condition = 'multi-agents'
df = pd.read_csv(file_name)
split_by = '[/INST]' if not file_name.startswith('gemma') else '<end_of_turn>'

"""# Idea 1

## LLAMA
"""

import re

def extract_substrings_llama(text):
    pattern = r'\d+\.\s(.+?)(?=\d+\.|\Z)'
    substrings = re.findall(pattern, text, re.DOTALL)

    pattern = r'^\d+\.\s+'
    for i in range(len(substrings)):
        substrings[i] = substrings[i].strip()
        substrings[i] = re.sub(pattern, '', substrings[i])
        if '\n' in substrings[i]:
            substrings[i] = substrings[i].split('\n')[0]
    return substrings
session_ids = []
items = []
idea_ids = []
ideas = []
conditions = []
for i, row in df.iterrows():
  ideas_l = extract_substrings_llama(row['responses'].split(split_by)[-1])
  curr_idea_id = 0
  for idea in ideas_l:
    session_ids.append(row['session_ids'])
    items.append(row['item_names'])
    idea_ids.append(curr_idea_id)
    ideas.append(idea)
    conditions.append(condition)
    curr_idea_id += 1

new_df = pd.DataFrame({'session_id': session_ids, 'item': items, 'idea_id': idea_ids, 'idea': ideas, 'condition': conditions})

new_df.to_csv(f'parsed/{file_name}', index=False)

import re

def extract_substrings_llama_base(text):
    pattern = r'\.\s(.+?)(?=\d+\.|\Z)'
    substrings = re.findall(pattern, text, re.DOTALL)

    pattern = r'^\d+\.\s+'
    substrings = text.split('\n')
    # for i in range(len(substrings)):
    #     substrings[i] = substrings[i].strip()
    #     substrings[i] = re.sub(pattern, '', substrings[i])
    #     if '\n' in substrings[i]:
    #         substrings[i] = substrings[i].split('\n')[0]
    # drop empty strings.
    substrings = substrings[1:-1]
    substrings = [s for s in substrings if s]
    return substrings
session_ids = []
items = []
idea_ids = []
ideas = []
conditions = []
for i, row in df.iterrows():
  ideas_l = extract_substrings_llama_base(row['responses'].split(split_by)[-1])
  curr_idea_id = 0
  for idea in ideas_l:
    session_ids.append(row['session_ids'])
    items.append(row['item_names'])
    idea_ids.append(curr_idea_id)
    ideas.append(idea)
    conditions.append(condition)
    curr_idea_id += 1

new_df = pd.DataFrame({'session_id': session_ids, 'item': items, 'idea_id': idea_ids, 'idea': ideas, 'condition': conditions})

new_df.to_csv(f'parsed/{file_name}', index=False)

new_df

new_df[(new_df['item'] == 'tire') & (new_df['session_id'] == 2)]

"""## Mistral"""

import re

def extract_substrings_llama(text):
    pattern = r'\d+\.\s(.+?)(?=\d+\.|\Z)'
    substrings = re.findall(pattern, text, re.DOTALL)

    pattern = r'^\d+\.\s+'
    for i in range(len(substrings)):
        substrings[i] = substrings[i].strip()
        substrings[i] = re.sub(pattern, '', substrings[i])
    return substrings
session_ids = []
items = []
idea_ids = []
ideas = []
conditions = []
for i, row in df.iterrows():
  ideas_l = extract_substrings_llama(row['responses'].split('[/INST]')[-1])
  curr_idea_id = 0
  for idea in ideas_l:
    session_ids.append(row['session_ids'])
    items.append(row['item_names'])
    idea_ids.append(curr_idea_id)
    ideas.append(idea)
    conditions.append(condition)
    curr_idea_id += 1

new_df = pd.DataFrame({'session_id': session_ids, 'item': items, 'idea_id': idea_ids, 'idea': ideas, 'condition': conditions})

new_df.to_csv(f'parsed_{file_name}', index=False)

df['responses'][1].split('[/INST]')[-1]

"""## Gemma"""

import re

def extract_substrings_llama(text):
    pattern = r'\d+\.\s(.+?)(?=\d+\.|\Z)'
    substrings = re.findall(pattern, text, re.DOTALL)

    pattern = r'^\d+\.\s+'
    for i in range(len(substrings)):
        substrings[i] = substrings[i].strip()
        substrings[i] = re.sub(pattern, '', substrings[i])
    return substrings
session_ids = []
items = []
idea_ids = []
ideas = []
conditions = []
for i, row in df.iterrows():
  ideas_l = extract_substrings_llama(row['responses'].split('<end_of_turn>')[-1])
  curr_idea_id = 0
  for idea in ideas_l:
    session_ids.append(row['session_ids'])
    items.append(row['item_names'])
    idea_ids.append(curr_idea_id)
    ideas.append(idea)
    conditions.append(condition)
    curr_idea_id += 1

new_df = pd.DataFrame({'session_id': session_ids, 'item': items, 'idea_id': idea_ids, 'idea': ideas, 'condition': conditions})

new_df.to_csv(f'parsed_{file_name}', index=False)

df['responses'][1].split('<end_of_turn>')[-1]